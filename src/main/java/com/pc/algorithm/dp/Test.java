package com.pc.algorithm.dp;import java.util.Arrays;/** * * 金额amount * 面值[c1,c2,c3,c4] * * f(0) = 0 * f(n) = -1, n<0 * f(amount) = min{f(amount-ci)+1} * * * * @author pengchao * @date 11:23 2020-12-28 */public class Test {    public static void main(String[] args) {    }    public static int dp(int n,int[] member) {        if(n<1) {            return 0;        }        if(n==1) {            return 1;        }        if(n==2) {            return 2;        }        return dp(n-1,member)+dp(n-2, member);    }    public static int dp(int n) {        if(n<1) {            return 0;        }        if(n==1) {            return 1;        }        if(n==2) {            return 2;        }        int a = 1;        int b = 2;        int temp = 0;        for(int i=2;i<=n;i++) {            temp = a+b;            a = b;            b = temp;        }        return temp;    }}